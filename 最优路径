#include <iostream>
#include <cstring>
using namespace std;

int m, n;
int a[210][210];
int dp[210][210];
int f(int x, int y)
{
	int i, j;
	if (dp[x][y] != -1000000)
		return dp[x][y];
	int zuo[210], you[210];
	zuo[1] = f(x - 1, 1) + a[x][1];
	you[n] = f(x - 1, n) + a[x][n];

	for (i = 2; i <= n; i++)//x行，i列
		zuo[i] = max(zuo[i - 1], f(x - 1, i)) + a[x][i];
	for (i = n - 1; i >= 1; i--)
		you[i] = max(you[i + 1], f(x - 1, i)) + a[x][i];
	for (i = 1; i <= n; i++)
		dp[x][i] = max(zuo[i], you[i]);
	return dp[x][y];
}
int main()
{
	int i, j, k;
	while (cin >> m >> n)
	{
		memset(a, 0, sizeof(a));
		for (i = 1; i <= m; i++)
			for (j = 1; j <= n; j++)
				cin >> a[i][j];

		int ans = -1000000;
		memset(dp, 0, sizeof(dp));
		for (j = 1; j <= m; j++)
			for (k = 1; k <= n; k++)
				dp[j][k] = -1000000;
		for (i = 1; i <= n; i++)
			ans = max(ans, f(m, i));
		cout << ans << endl;
	}
}
